<?php
/* 
 * Generated by CRUDigniter v2.1 Beta 
 * www.crudigniter.com
 */
 
class Produto_estoque_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get produto_estoque by id
     */
    function get_produto_estoque($id)
    {
        return $this->db->get_where('produto_estoque',array('id'=>$id))->row_array();
    }
    
    /*
     * Get all produto_estoque
     */
    function get_all_produto_estoque()
    {   
        $this->db->select('c.id, f.nome as fornecedor ,pe.quantidade, pe.quantidade_baixa,
            c.value_product, pe.data_criacao, c.value_product,p.nome as produto');
        $this->db->join('produto p','p.id = pe.produto_id');
        $this->db->join('compra c','p.id = c.produto_id');
        $this->db->join('fornecedor f','c.fornecedor_id = f.id');

        return $this->db->get('produto_estoque pe')->result_array();
    }
    
    /*
     * function to add new produto_estoque
     */
    function add_produto_estoque($params)
    {
        $this->db->insert('produto_estoque',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update produto_estoque
     */
    function update_produto_estoque($id,$params)
    {
        $this->db->where('id',$id);
        $this->db->update('produto_estoque',$params);
    }
    
    /*
     * function to delete produto_estoque
     */
    function delete_produto_estoque($id)
    {
        $this->db->delete('produto_estoque',array('id'=>$id));
    }

    function limite_excedido($produto_id)
    {
        $this->db->select("quantidade, quantidade_baixa");
        $this->db->where("produto_id",$produto_id);
        $query = $this->db->get("produto_estoque")->row_array();

        return $query;
    }
}
