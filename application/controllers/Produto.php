<?php
/* 
 * Generated by CRUDigniter v2.1 Beta 
 * www.crudigniter.com
 */
 
class Produto extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Produto_model');
    } 

    /*
     * Listing of produto
     */
    function index()
    {
        $data['produto'] = $this->Produto_model->get_all_produto();

        $this->load->view('cabecalho');
        $this->load->view('produto/index',$data);
    }

    /*
     * Adding a new produto
     */
    function add()
    {   

        $this->load->library('form_validation');
        $this->load->model('Compra_model');

        $this->form_validation->set_rules('nome','Nome','min_length[3]|required|callback_produto_existente');
        if($this->form_validation->run())     
        {   
            $params = array(
                'nome' => $this->input->post('nome'),
                'img_path' => '',
            );
            
            $produto_id = $this->Produto_model->add_produto($params);

            redirect('produto/index');
        }
        else
        {
            $this->load->view('cabecalho');
            $this->load->view('produto/add');
        }
    }  

    /*
     * Editing a produto
     */
    function edit($id)
    {   
        // check if the produto exists before trying to edit it
        $produto = $this->Produto_model->get_produto($id);
        $this->load->model("Compra_model");
        if(isset($produto['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
                'nome' => $this->input->post('nome'),
                'img_path' => '',
            );

                $this->Produto_model->update_produto($id,$params);            
                redirect('produto/index');
            }
            else
            {   
                $data['produto'] = $this->Produto_model->get_produto($id);
    
                $this->load->view('cabecalho');
                $this->load->view('produto/edit',$data);
            }
        }
        else
            show_error('The produto you are trying to edit does not exist.');
    } 

    /*
     * Deleting produto
     */
    function remove($id)
    {
        $produto = $this->Produto_model->get_produto($id);

        // check if the produto exists before trying to delete it
        if(isset($produto['id']))
        {
            $this->Produto_model->delete_produto($id);
            redirect('produto/index');
        }
        else
            show_error('The produto you are trying to delete does not exist.');
    }

     public function produto_existente($produto) {

        if ($this->Produto_model->estaSalvo($produto)) {
            $this->form_validation->set_message("produto_existente", "O produto {$produto} já está cadastrado! Por favor, escolha outro nome.");
            return FALSE;
        } else {
            return TRUE;
        }

    }
    
}
