<?php
/* 
 * Generated by CRUDigniter v2.1 Beta 
 * www.crudigniter.com
 */
 
class Compra extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Compra_model');
    } 

    /*
     * Listing of compra
     */
    function index()
    {
        $data['compra'] = $this->Compra_model->get_all_compra();
        $this->load->view('compra/index',$data);
    }

    /*
     * Adding a new compra
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('value_product','Value Product','required');
		$this->form_validation->set_rules('quantidade','Quantidade','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'quantidade' => $this->input->post('quantidade'),
				'value_product' => $this->input->post('value_product'),
				'data_criacao' => $this->input->post('data_criacao'),
            );
            
            $compra_id = $this->Compra_model->add_compra($params);
            redirect('compra/index');
        }
        else
        {
            $this->load->view('compra/add');
        }
    }  

    /*
     * Editing a compra
     */
    function edit($id)
    {   
        // check if the compra exists before trying to edit it
        $compra = $this->Compra_model->get_compra($id);
        
        if(isset($compra['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('value_product','Value Product','required');
			$this->form_validation->set_rules('quantidade','Quantidade','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'quantidade' => $this->input->post('quantidade'),
					'value_product' => $this->input->post('value_product'),
					'data_criacao' => $this->input->post('data_criacao'),
                );

                $this->Compra_model->update_compra($id,$params);            
                redirect('compra/index');
            }
            else
            {   
                $data['compra'] = $this->Compra_model->get_compra($id);
    
                $this->load->view('compra/edit',$data);
            }
        }
        else
            show_error('The compra you are trying to edit does not exist.');
    } 

    /*
     * Deleting compra
     */
    function remove($id)
    {
        $compra = $this->Compra_model->get_compra($id);

        // check if the compra exists before trying to delete it
        if(isset($compra['id']))
        {
            $this->Compra_model->delete_compra($id);
            redirect('compra/index');
        }
        else
            show_error('The compra you are trying to delete does not exist.');
    }
    
}
